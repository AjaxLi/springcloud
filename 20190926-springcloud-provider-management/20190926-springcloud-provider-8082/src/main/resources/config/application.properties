server.port=8082
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/bookdb?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.lhm.springcloud.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# 配置的是在eureka中显示的服务名(Application)
# 如果不配置，则会显示UNKNOWN(这个是细节！！，以后有问题)
spring.application.name=user-provider

# 配置eureka的注册地址(实现provider这个客户端注册进了eureka中)
# GreenWich RS.3:无论是单点解还是集群模式，
# eureka的服务器端和客户端的命名空间必要保持一致，否则会报错(找不到服务实例)
#eureka.client.service-url.defaultZone=http://localhost:7081/eureka
eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka

# 是在eureka中配置实例的名字(也就是说Eureka的Status下的显示的名字)
# ！！！不允许重复！！！(相当于mysql数据库中的表的主键id)
eureka.instance.instance-id=user-provider-8082

# 在eureka中显示IP地址
eureka.instance.prefer-ip-address=true

# 点击eureka的服务名显示出该服务的具体信息
# 根据服务的具体内容，作者，公司，以及对整个服务的描述来进行显示
# 相当于在HTML页面上有一个a标签<a href="/actuator/info"></a> --> 跳转到controller:@RequestMapping("/actuator/info")
# !!开头用info!!其他的随便输入
info.author.name=Ajax Li
info.company.name=AAA SOFTWARE EDU
info.project.description=This is Demo

# 规定自己向eureka发送心跳的时间
# 单位是秒
#eureka.instance.lease-renewal-interval-in-seconds=5
# 当eureka最后一次检测到心跳的时间间隔(单位是秒)
# eg:15:05:20是最后一次检测到心跳-->检测8秒之后还是无法检测心跳的时候直接剔除
#eureka.instance.lease-expiration-duration-in-seconds=8
